// <auto-generated />
using System;
using ChatLife.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatLife.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20211020141415_ChatLife-v1")]
    partial class ChatLifev1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("ChatLife.Models.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GroupCallCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GroupCallCode");

                    b.HasIndex("UserCode");

                    b.ToTable("Call");
                });

            modelBuilder.Entity("ChatLife.Models.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ContactCode")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ContactCode");

                    b.HasIndex("UserCode");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ChatLife.Models.Group", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("ChatLife.Models.GroupCall", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.ToTable("GroupCall");
                });

            modelBuilder.Entity("ChatLife.Models.GroupUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("GroupCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GroupCode");

                    b.HasIndex("UserCode");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("ChatLife.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Path")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupCode");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ChatLife.Models.User", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentSession")
                        .HasColumnType("longtext");

                    b.Property<string>("Dob")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ChatLife.Models.Call", b =>
                {
                    b.HasOne("ChatLife.Models.GroupCall", "GroupCall")
                        .WithMany("Calls")
                        .HasForeignKey("GroupCallCode");

                    b.HasOne("ChatLife.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserCode");

                    b.Navigation("GroupCall");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatLife.Models.Contact", b =>
                {
                    b.HasOne("ChatLife.Models.User", "UserContact")
                        .WithMany()
                        .HasForeignKey("ContactCode");

                    b.HasOne("ChatLife.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserCode");

                    b.Navigation("User");

                    b.Navigation("UserContact");
                });

            modelBuilder.Entity("ChatLife.Models.GroupUser", b =>
                {
                    b.HasOne("ChatLife.Models.Group", "Group")
                        .WithMany("GroupUsers")
                        .HasForeignKey("GroupCode");

                    b.HasOne("ChatLife.Models.User", "User")
                        .WithMany("GroupUsers")
                        .HasForeignKey("UserCode");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatLife.Models.Message", b =>
                {
                    b.HasOne("ChatLife.Models.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("ChatLife.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupCode");

                    b.Navigation("Group");

                    b.Navigation("UserCreatedBy");
                });

            modelBuilder.Entity("ChatLife.Models.Group", b =>
                {
                    b.Navigation("GroupUsers");
                });

            modelBuilder.Entity("ChatLife.Models.GroupCall", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("ChatLife.Models.User", b =>
                {
                    b.Navigation("GroupUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
